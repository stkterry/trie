{
  "stats": {
    "suites": 13,
    "tests": 17,
    "passes": 17,
    "pending": 0,
    "failures": 0,
    "start": "2020-01-24T06:06:09.924Z",
    "end": "2020-01-24T06:06:09.930Z",
    "duration": 6,
    "testsRegistered": 17,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "722b9ce2-553b-4f87-930c-810093dc5630",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a5c3a806-bda8-4995-ad85-2fca101f8b17",
          "title": "TrieNode",
          "fullFile": "/home/szczepan/dev_projects/JavaScript/Object Extensions/trie/test/trie_node_test.js",
          "file": "/test/trie_node_test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "e92299bd-0bf4-481b-a0c6-9ce79f3433b9",
              "title": "Constructor",
              "fullFile": "/home/szczepan/dev_projects/JavaScript/Object Extensions/trie/test/trie_node_test.js",
              "file": "/test/trie_node_test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should be an extension of Map",
                  "fullTitle": "TrieNode Constructor should be an extension of Map",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(node).to.be.an.instanceOf(Map);",
                  "err": {},
                  "uuid": "8c361d15-7126-4f43-8ab4-bda79d8a84d7",
                  "parentUUID": "e92299bd-0bf4-481b-a0c6-9ce79f3433b9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should be an instance of TrieNode",
                  "fullTitle": "TrieNode Constructor should be an instance of TrieNode",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(node).to.be.an.instanceOf(TrieNode)",
                  "err": {},
                  "uuid": "6358df6d-976a-48ef-bc5c-bfb0fc8292b4",
                  "parentUUID": "e92299bd-0bf4-481b-a0c6-9ce79f3433b9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should initialize with isTerminal property set to false",
                  "fullTitle": "TrieNode Constructor should initialize with isTerminal property set to false",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(node.isTerminal).to.be.equal(false)",
                  "err": {},
                  "uuid": "e723d10c-5bd1-4026-b2d8-c16c4f503d06",
                  "parentUUID": "e92299bd-0bf4-481b-a0c6-9ce79f3433b9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8c361d15-7126-4f43-8ab4-bda79d8a84d7",
                "6358df6d-976a-48ef-bc5c-bfb0fc8292b4",
                "e723d10c-5bd1-4026-b2d8-c16c4f503d06"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "29fade24-668d-4305-8cd3-974b1e057442",
              "title": "isEmpty",
              "fullFile": "/home/szczepan/dev_projects/JavaScript/Object Extensions/trie/test/trie_node_test.js",
              "file": "/test/trie_node_test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true when empty",
                  "fullTitle": "TrieNode isEmpty should return true when empty",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(node.isEmpty()).to.be.equal(true);",
                  "err": {},
                  "uuid": "1e830b13-28a6-4c78-ac07-7b3b1d3cd34d",
                  "parentUUID": "29fade24-668d-4305-8cd3-974b1e057442",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false when not empty",
                  "fullTitle": "TrieNode isEmpty should return false when not empty",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "node.set('a', 'dat');\nexpect(node.isEmpty()).to.be.equal(false);",
                  "err": {},
                  "uuid": "41bf890f-2965-4c28-98e4-3275a380f07e",
                  "parentUUID": "29fade24-668d-4305-8cd3-974b1e057442",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1e830b13-28a6-4c78-ac07-7b3b1d3cd34d",
                "41bf890f-2965-4c28-98e4-3275a380f07e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "21ba733b-7a95-4f76-8416-70cf7613a8f5",
          "title": "Trie",
          "fullFile": "/home/szczepan/dev_projects/JavaScript/Object Extensions/trie/test/trie_test.js",
          "file": "/test/trie_test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "f5175e96-2d22-43bc-9dc9-0ecea8f2f2f4",
              "title": "Constructor",
              "fullFile": "/home/szczepan/dev_projects/JavaScript/Object Extensions/trie/test/trie_test.js",
              "file": "/test/trie_test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should initialize with a TrieNode as a root propery",
                  "fullTitle": "Trie Constructor should initialize with a TrieNode as a root propery",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const trie = new Trie();\nexpect(trie.root).to.be.an.instanceOf(TrieNode);",
                  "err": {},
                  "uuid": "08cbc0a7-2426-40ff-9e42-f7431fcf11ef",
                  "parentUUID": "f5175e96-2d22-43bc-9dc9-0ecea8f2f2f4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "08cbc0a7-2426-40ff-9e42-f7431fcf11ef"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "72c1e5d9-7305-43f4-8790-69ee08771317",
              "title": "insert",
              "fullFile": "/home/szczepan/dev_projects/JavaScript/Object Extensions/trie/test/trie_test.js",
              "file": "/test/trie_test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should recursively insert a word",
                  "fullTitle": "Trie insert should recursively insert a word",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(trie.root).to.deep.equal(root);",
                  "err": {},
                  "uuid": "fa3416f9-d147-486b-b9d6-ce4fae756b29",
                  "parentUUID": "72c1e5d9-7305-43f4-8790-69ee08771317",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should set the final letter of a word as terminal",
                  "fullTitle": "Trie insert should set the final letter of a word as terminal",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let insertCheck = trie.root.get('c').get('a').get('t').isTerminal;\nexpect(insertCheck).to.equal(true);",
                  "err": {},
                  "uuid": "73868828-64a4-4e2f-824b-05882929fba8",
                  "parentUUID": "72c1e5d9-7305-43f4-8790-69ee08771317",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fa3416f9-d147-486b-b9d6-ce4fae756b29",
                "73868828-64a4-4e2f-824b-05882929fba8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "ad6b7b30-7ce8-4348-a857-c4212a122295",
              "title": "insertAll",
              "fullFile": "/home/szczepan/dev_projects/JavaScript/Object Extensions/trie/test/trie_test.js",
              "file": "/test/trie_test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should add all given words to the trie",
                  "fullTitle": "Trie insertAll should add all given words to the trie",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const trie = new Trie();\ntrie.insertAll(['cat', 'can']);\nlet checkCat = trie.root.get('c').get('a').get('t').isTerminal;\nlet checkCan = trie.root.get('c').get('a').get('n').isTerminal;\nexpect(checkCat).to.equal(true);\nexpect(checkCan).to.equal(true);",
                  "err": {},
                  "uuid": "d2d44dd9-c0d5-4b78-af1e-3b9361f195ac",
                  "parentUUID": "ad6b7b30-7ce8-4348-a857-c4212a122295",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d2d44dd9-c0d5-4b78-af1e-3b9361f195ac"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "df4d99b5-858e-4f04-890c-3470957f0ef7",
              "title": "has",
              "fullFile": "/home/szczepan/dev_projects/JavaScript/Object Extensions/trie/test/trie_test.js",
              "file": "/test/trie_test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true when a word is in the trie",
                  "fullTitle": "Trie has should return true when a word is in the trie",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(trie.has('cat')).to.equal(true);",
                  "err": {},
                  "uuid": "3f26bb61-1ce0-4523-aa0b-dca7a2ff7a27",
                  "parentUUID": "df4d99b5-858e-4f04-890c-3470957f0ef7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false when a word is not in the trie",
                  "fullTitle": "Trie has should return false when a word is not in the trie",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(trie.has('can')).to.equal(false);",
                  "err": {},
                  "uuid": "604bd865-bee4-43c1-b881-6991d3a923c8",
                  "parentUUID": "df4d99b5-858e-4f04-890c-3470957f0ef7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3f26bb61-1ce0-4523-aa0b-dca7a2ff7a27",
                "604bd865-bee4-43c1-b881-6991d3a923c8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f0b6f902-634e-4421-84b8-d69ec015bc50",
              "title": "dump",
              "fullFile": "/home/szczepan/dev_projects/JavaScript/Object Extensions/trie/test/trie_test.js",
              "file": "/test/trie_test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return an array containing all words",
                  "fullTitle": "Trie dump should return an array containing all words",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const words = trie.dump();\nexpect(words).to.deep.equal(['cat', 'can', 'bat']);",
                  "err": {},
                  "uuid": "41eeedac-0621-4065-9849-294e4274336b",
                  "parentUUID": "f0b6f902-634e-4421-84b8-d69ec015bc50",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "41eeedac-0621-4065-9849-294e4274336b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "98be7bb3-1582-442d-bc90-3beba05897c7",
              "title": "query",
              "fullFile": "/home/szczepan/dev_projects/JavaScript/Object Extensions/trie/test/trie_test.js",
              "file": "/test/trie_test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return all words that include the given prefix",
                  "fullTitle": "Trie query should return all words that include the given prefix",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const queryResult = trie.query(\"ca\");\nexpect(queryResult).to.deep.equal(['cat', 'can']);",
                  "err": {},
                  "uuid": "383f7cb7-d324-4dd5-aa6d-868dedaa7c86",
                  "parentUUID": "98be7bb3-1582-442d-bc90-3beba05897c7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "383f7cb7-d324-4dd5-aa6d-868dedaa7c86"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f4e825bb-9974-4e9b-9b88-bcfce696ed32",
              "title": "eject",
              "fullFile": "/home/szczepan/dev_projects/JavaScript/Object Extensions/trie/test/trie_test.js",
              "file": "/test/trie_test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should ensure the given word's end node.isTerminal is false",
                  "fullTitle": "Trie eject should ensure the given word's end node.isTerminal is false",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(trie.has('cite')).to.equal(false);",
                  "err": {},
                  "uuid": "61bc4106-b1ce-4a4d-8f26-c56d220a7364",
                  "parentUUID": "f4e825bb-9974-4e9b-9b88-bcfce696ed32",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should remove unused nodes if possible",
                  "fullTitle": "Trie eject should remove unused nodes if possible",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let exists = trie.root.get('c').get('a').get('n');\nexpect(exists).to.equal(undefined);",
                  "err": {},
                  "uuid": "c5752c78-d895-406b-9760-960689e69b3a",
                  "parentUUID": "f4e825bb-9974-4e9b-9b88-bcfce696ed32",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "61bc4106-b1ce-4a4d-8f26-c56d220a7364",
                "c5752c78-d895-406b-9760-960689e69b3a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "5c4a6280-6f8d-4094-938e-f1585b1eed4b",
              "title": "cutAfter",
              "fullFile": "/home/szczepan/dev_projects/JavaScript/Object Extensions/trie/test/trie_test.js",
              "file": "/test/trie_test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should clear the node after the last letter",
                  "fullTitle": "Trie cutAfter should clear the node after the last letter",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "trie.cutAfter('take');\nexpect(trie.dump()).to.deep.equal(['cats', 'take']);",
                  "err": {},
                  "uuid": "d25bce87-6e9b-4d86-81e5-39ec471ef924",
                  "parentUUID": "5c4a6280-6f8d-4094-938e-f1585b1eed4b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d25bce87-6e9b-4d86-81e5-39ec471ef924"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "12204684-96fd-4ee7-9ace-13791920e3d5",
              "title": "sterilize",
              "fullFile": "/home/szczepan/dev_projects/JavaScript/Object Extensions/trie/test/trie_test.js",
              "file": "/test/trie_test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should clear all nodes of the word except of the word itself",
                  "fullTitle": "Trie sterilize should clear all nodes of the word except of the word itself",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "trie.sterilize('take');\nexpect(trie.dump()).to.deep.equal(['take']);",
                  "err": {},
                  "uuid": "c4c50d53-6239-4485-b0ce-82a2e4cff290",
                  "parentUUID": "12204684-96fd-4ee7-9ace-13791920e3d5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c4c50d53-6239-4485-b0ce-82a2e4cff290"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "reportDir": "test/mochawesome"
      },
      "version": "4.1.0"
    }
  }
}